package com.capgemini.payment.wallet.controller;

import java.math.BigInteger;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.capgemini.payment.wallet.exception.LowBalanceException;
import com.capgemini.payment.wallet.model.BillDetails;
import com.capgemini.payment.wallet.service.IBillDetailsService;
import com.capgemini.payment.wallet.service.WalletAccountService;

@RestController
@CrossOrigin(origins="http://localhost:4200")
@RequestMapping()
public class BillDetailsController {
	@Autowired
	IBillDetailsService billDetailsServiceObj;
	
	@Autowired
	WalletAccountService walletAccountService;

	@PostMapping("/register")
	public void save(@RequestBody BillDetails billdetails) {
		billDetailsServiceObj.save(billdetails);
		System.out.println("Account added");
	}

	@GetMapping("/viewAccountById/{no}")
	public BillDetails viewAccount(@PathVariable(value="no") BigInteger billNumber) 
		{
			return billDetailsServiceObj.viewBillAccount(billNumber);
		}

	@RequestMapping("/list")//maps web requests
	public List<BillDetails> viewAllAccount(Model modelObj)
		{
		//System.out.println("List of account");
		 	return billDetailsServiceObj.viewAllBillAccounts();
		}
	@GetMapping("/payElectricityBill/{walletId}/{billAmount}")
	public void payElectricityBill(@PathVariable int walletId, double billAmount) throws LowBalanceException {
		double balance = walletAccountService.getBalance(walletId);
		System.out.println("Inside controller");
		if(balance < billAmount) {
			throw new LowBalanceException("Low Balance Exception");
		}
		else {
			
			walletAccountService.payElectricityBill(walletId, billAmount);
		}
	}
		

}